{
  "version": 3,
  "sources": ["../../../src/games/breaklock.ts"],
  "sourcesContent": ["import { GameContent } from \"../interfaces/gameContent\";\r\nimport GameResult, { ResultType } from \"../interfaces/gameResult\";\r\nimport GameBase from \"../classes/gameBase\";\r\nimport Position, { up, down, left, right, isInside } from \"../interfaces/position\";\r\nimport Discord, { MessageActionRow, MessageActionRowComponentResolvable, MessageButton, MessageComponent, MessageEmbed, User } from \"discord.js\";\r\n\r\nconst HEIGHT = 3\r\nconst WIDTH = 3\r\nexport default class BreakLockGame extends GameBase {\r\n\r\n    currentGameBoard;\r\n    turn: number;\r\n    selectedTurn: number;\r\n    pattern: number[];\r\n    currentPattern: number[];\r\n    turnLimit: number = 20;\r\n    history: string[];\r\n\r\n    constructor() {\r\n        super('breaklock', false);\r\n        this.currentGameBoard = [];\r\n        for (let y = 0; y < HEIGHT; y++) {\r\n            for (let x = 0; x < WIDTH; x++) {\r\n                this.currentGameBoard[y * WIDTH + x] = {\r\n                    type: Discord.Constants.MessageComponentTypes.BUTTON ,\r\n                    style: Discord.Constants.MessageButtonStyles.SECONDARY,\r\n                    customId: `breaklock${y * WIDTH + x + 1}`,\r\n                    label: '-',\r\n                    disabled: false\r\n                }\r\n            }\r\n        }\r\n        // console.log(this.currentGameBoard)\r\n        this.turn = 0;\r\n        this.selectedTurn = 0;\r\n        this.currentPattern = [];\r\n        this.pattern = this.patternGenerate()\r\n        this.history = [];\r\n    }\r\n    protected getContent(): GameContent {\r\n        const embed = new MessageEmbed()\r\n            .setColor('#08b9bf')\r\n            .setFooter({ text: `Playing with: ${this.gameStarter.username}` })\r\n            .setTitle('Break Lock')\r\n            .setDescription(`[Click here to learn how to play](https://gameboardswebsite.lockdownammo7.repl.co/docs/#break-lock)\r\n            \\nTurn: ${this.turn}\\nPrevious attempts: `)\r\n            .setImage(`https://gameboardswebsite.lockdownammo7.repl.co/gameBot/breakLock/${this.history.length > 0 ? this.history.join('-') : ''}`)\r\n            .setTimestamp()\r\n        //console.log(this.componentGenerator())\r\n        //console.log(`https://gameboardswebsite.lockdownammo7.repl.co/gameBot/breakLock/${this.history.length > 0 ? this.history.join('-') : ''}`)\r\n        return {\r\n            embeds: [embed],\r\n            components: this.componentGenerator()\r\n        }\r\n    }\r\n    protected getGameOverContent(result: GameResult): GameContent {\r\n        const embed = new Discord.MessageEmbed()\r\n            .setColor('#08b9bf')\r\n            .setTitle('Break Lock')\r\n            .setFooter({ text: \"Whoops something overflowed :D\" })\r\n            .setDescription(`GAME OVER\\n ${this.getWinnerText(result)}`)\r\n            .setImage(`https://gameboardswebsite.lockdownammo7.repl.co/gameBot/breakLock/${this.history.length > 0 ? this.history.join('-') : ''}`)\r\n            .setTimestamp()\r\n        //console.log(`https://gameboardswebsite.lockdownammo7.repl.co/gameBot/breakLock/${this.history.length > 0 ? this.history.join('-') : ''}`)\r\n        \r\n    //console.log()\r\n        return {\r\n            embeds: [embed],\r\n            components: []\r\n        }\r\n    }\r\n    public onInteraction(interaction: Discord.Interaction<Discord.CacheType>): void {\r\n        if (!interaction.isButton()) return;\r\n        if (!interaction.customId.startsWith('breaklock')) return;\r\n        if (interaction.user.id !== this.gameStarter.id) return;\r\n\r\n        if (interaction.customId === 'breaklockCancelCurrentSelection') {\r\n            this.newCurrentGameBoard();\r\n            interaction.update(this.getContent()).catch(e => super.handleError(e, 'update interaction'))\r\n            this.selectedTurn = 0;\r\n            this.step(false);\r\n        } else {\r\n            let selectId = parseInt(interaction.customId.slice('breaklock'.length)) ?? undefined\r\n            if (!selectId) return;\r\n            this.currentPattern.push(selectId)\r\n           // console.log(this.currentPattern)\r\n            if (this.selectedTurn >= 3) {\r\n                if (this.currentPattern.join(',') == this.pattern.join(',')) {\r\n                    this.history = [...this.history, this.historyStringConstructor()]\r\n                    this.selectedTurn = 0;\r\n                    this.newCurrentGameBoard();\r\n                    this.gameOver({ result: ResultType.WINNER, name: this.gameStarter.id }, interaction);\r\n                } else if (this.turn + 1 >= this.turnLimit) {\r\n                    this.history = [...this.history, this.historyStringConstructor()]\r\n                    this.gameOver({ result: ResultType.LOSER, name: this.gameStarter.id }, interaction);\r\n                } else {\r\n                    this.history = [...this.history, this.historyStringConstructor()]\r\n                    this.currentPattern = [];\r\n                    this.selectedTurn = 0;\r\n                    this.newCurrentGameBoard();\r\n                    interaction.update(this.getContent()).catch(e => super.handleError(e, 'update interaction'));\r\n                    this.turn ++;\r\n                    this.step(false);\r\n                }\r\n            } else {\r\n                this.currentGameBoard[selectId - 1].disabled = true\r\n                this.currentGameBoard[selectId - 1].label = `${this.selectedTurn + 1}`\r\n                // console.log(this.currentGameBoard[selectId - 1])\r\n                this.selectedTurn += 1;\r\n                interaction.update(this.getContent()).catch(e => super.handleError(e, 'update interaction'));\r\n                this.step(false)\r\n            }\r\n        }\r\n\r\n    }\r\n    private componentGenerator(): MessageActionRow[] {\r\n        let components: MessageActionRow[] = [];\r\n        for (let y = 0; y < HEIGHT; y++) {\r\n            let row = new MessageActionRow()\r\n            for (let x = 0; x < WIDTH; x++) {\r\n                const c = this.currentGameBoard[y * WIDTH + x]\r\n                row.addComponents({\r\n                    type: c.type,\r\n                    customId: c.customId,\r\n                    style: c.style,\r\n                    label: c.label,\r\n                    disabled: c.disabled\r\n                })\r\n            }\r\n            components.push(row)\r\n        }\r\n        components.push(\r\n            new MessageActionRow().addComponents({\r\n                type: 'BUTTON',\r\n                customId: 'breaklockCancelCurrentSelection',\r\n                style: 'DANGER',\r\n                label: 'Cancel Current Selection',\r\n                disabled: false\r\n            })\r\n        )\r\n        return components;\r\n    }\r\n    private newCurrentGameBoard() {\r\n        for (let y = 0; y < HEIGHT; y++) {\r\n            for (let x = 0; x < WIDTH; x++) {\r\n                this.currentGameBoard[y * WIDTH + x] = {\r\n                    type: Discord.Constants.MessageComponentTypes.BUTTON,\r\n                    style: Discord.Constants.MessageButtonStyles.SECONDARY,\r\n                    customId: `breaklock${y * WIDTH + x + 1}`,\r\n                    label: '-',\r\n                    disabled: false\r\n                }\r\n            }\r\n        }\r\n        // console.log(this.currentGameBoard)\r\n        this.currentPattern = [];\r\n        this.selectedTurn = 0;\r\n        return;\r\n    }\r\n    private patternGenerate(): number[] {\r\n        let ptr = [];\r\n        let chosen: number[] = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            let randInt = Math.floor(Math.random() * WIDTH * HEIGHT + 1);\r\n           // console.log(randInt)\r\n            if (chosen.includes(randInt)) i -= 1\r\n            else chosen.push(randInt)\r\n        }\r\n        console.log(`Pattern for current game: ${chosen}`)\r\n        return chosen;\r\n    }\r\n    private historyStringConstructor(): string {\r\n        return `${this.currentPatternGrid()}${this.currentPatternHints()}`;\r\n    }\r\n    private currentPatternGrid(): string {\r\n        let str = '';\r\n        for (let y = 0; y < HEIGHT; y++) {\r\n            for (let x = 0; x < WIDTH; x++) {\r\n                let c = y * WIDTH + x + 1\r\n                str += this.currentPattern.includes(c) ? `${this.currentPattern.indexOf(c) + 1}` : '0'\r\n            }\r\n        }\r\n        return str;\r\n    }\r\n    private currentPatternHints(): string {\r\n        let co = 0; // correct but wrong order\r\n        let c = 0; //correct\r\n        let ic = 0; //incorrect\r\n        for (const s of this.pattern) {\r\n            if (this.currentPattern.includes(s)) {\r\n                if (this.currentPattern.indexOf(s) === this.pattern.indexOf(s))\r\n                    c++;\r\n                else\r\n                    co++\r\n            }\r\n        }\r\n        ic = 4 - (c + co);\r\n        return `${c}${co}${ic}`\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
