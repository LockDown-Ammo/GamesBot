{
  "version": 3,
  "sources": ["../../../src/games/connect4.ts"],
  "sourcesContent": ["import { GameContent } from \"../interfaces/gameContent\";\r\nimport GameResult, { ResultType } from \"../interfaces/gameResult\";\r\nimport GameBase from \"../classes/gameBase\";\r\nimport Position, { up, down, left, right, isInside } from \"../interfaces/position\";\r\nimport Discord, { MessageActionRow, MessageButton, MessageEmbed, User } from \"discord.js\";\r\nimport { MessageButtonStyles } from \"discord.js/typings/enums\";\r\n\r\nconst HEIGHT = 7\r\nconst WIDTH = 7\r\n\r\nexport default class Connect4Game extends GameBase {\r\n    gameBoard: string[];\r\n    player1Turn: boolean;\r\n    constructor() {\r\n        super('connect4', true)\r\n        this.gameBoard = []\r\n        for(let y = 0; y < HEIGHT; y++){\r\n            for(let x = 0; x < WIDTH; x++){\r\n                this.gameBoard[y * WIDTH + x] = '\u26AB'\r\n            }\r\n        }\r\n        this.player1Turn = true;\r\n    }\r\n    private gameBoardToStr(): String {\r\n        let str: string = '';\r\n        for (let y = 0; y < HEIGHT; y++) {\r\n            for (let x = 0; x < WIDTH; x++) {\r\n                str += this.gameBoard[y * WIDTH + x]\r\n            }\r\n            str += `\\n`\r\n        }\r\n        return str;\r\n    }\r\n    protected getContent(): GameContent {\r\n        const row1 = new MessageActionRow().addComponents(\r\n            {\r\n                type: 'BUTTON',\r\n                style: 'SECONDARY',\r\n                customId: 'connect1',\r\n                emoji: '1\uFE0F\u20E3'\r\n            },\r\n            {\r\n                type: 'BUTTON',\r\n                style: 'SECONDARY',\r\n                customId: 'connect2',\r\n                emoji: '2\uFE0F\u20E3'\r\n            },\r\n            {\r\n                type: 'BUTTON',\r\n                style: 'SECONDARY',\r\n                customId: 'connect3',\r\n                emoji: '3\uFE0F\u20E3'\r\n            },\r\n            {\r\n                type: 'BUTTON',\r\n                style: 'SECONDARY',\r\n                customId: 'connect4',\r\n                emoji: '4\uFE0F\u20E3'\r\n            }\r\n        )\r\n        const row2 = new MessageActionRow().addComponents(\r\n            {\r\n                type: 'BUTTON',\r\n                style: 'SECONDARY',\r\n                customId: 'connect5',\r\n                emoji: '5\uFE0F\u20E3'\r\n            },\r\n            {\r\n                type: 'BUTTON',\r\n                style: 'SECONDARY',\r\n                customId: 'connect6',\r\n                emoji: '6\uFE0F\u20E3'\r\n            },\r\n            {\r\n                type: 'BUTTON',\r\n                style: 'SECONDARY',\r\n                customId: 'connect7',\r\n                emoji: '7\uFE0F\u20E3'\r\n            }\r\n        );\r\n        const embed = new MessageEmbed()\r\n            .setColor('#08b9bf')\r\n            .setTitle('Connect 4')\r\n            .setFooter({ text: `CurrentPlayer: ${this.getCurrentPlayer()?.username}` })\r\n            .setDescription(`[Click here to learn how to play](https://gameboardswebsite.lockdownammo7.repl.co/docs/#connect-4)\r\n            \\n${this.gameBoardToStr()}\\n1\uFE0F\u20E32\uFE0F\u20E33\uFE0F\u20E34\uFE0F\u20E35\uFE0F\u20E36\uFE0F\u20E37\uFE0F\u20E3`)\r\n            .setTimestamp();\r\n\r\n        return {\r\n            embeds: [embed],\r\n            components: [row1, row2]\r\n        }\r\n\r\n    }\r\n    private getCurrentPlayer(): User | undefined {\r\n        return this.player1Turn ? this.gameStarter : this.player2 ?? undefined\r\n    }\r\n    protected getGameOverContent(result: GameResult): GameContent {\r\n        const embed = new Discord.MessageEmbed()\r\n            .setColor('#08b9bf')\r\n            .setTitle('Connect 4')\r\n            .setFooter({ text: \"Whoops something overflowed :D\" })\r\n            .setDescription(`GAME OVER\\n${this.getWinnerText(result)}\\n\\n${this.gameBoardToStr()}\\n1\uFE0F\u20E32\uFE0F\u20E33\uFE0F\u20E34\uFE0F\u20E35\uFE0F\u20E36\uFE0F\u20E37\uFE0F\u20E3`)\r\n            .setTimestamp()\r\n        return {\r\n            embeds: [embed],\r\n            components: []\r\n        }\r\n    }\r\n    public onInteraction(interaction: Discord.Interaction<Discord.CacheType>): void {\r\n        if (!interaction.isButton()) return;\r\n        if (!interaction.customId.startsWith('connect')) return;\r\n        if (interaction.user.id !== this.getCurrentPlayer()?.id) {\r\n            interaction.reply({ ephemeral: true, content: `Not your turn :D` });\r\n            return;\r\n        }\r\n\r\n        const selected = parseInt(interaction.customId.slice(7))\r\n        if (!selected || selected < 1 || selected > WIDTH) return;\r\n        const column = selected - 1\r\n\r\n        if (this.gameBoard[column] !== '\u26AB') { interaction.reply({ ephemeral: true, content: 'The column you chose is already full' }); return; }\r\n        let placedX = -1\r\n        let placedY = -1\r\n        for (let y = HEIGHT - 1; y >= 0; y--) {\r\n            if (this.gameBoard[y * WIDTH + column] === '\u26AB') {\r\n                this.gameBoard[y * WIDTH + column] = this.turnColor();\r\n                placedX = column\r\n                placedY = y\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.hasWon(placedX, placedY)) {\r\n            this.gameOver({ result: ResultType.WINNER, name: this.turnColor() + this.player1Turn ? this.gameStarter.id : this.player2?.id ?? 'ERR' }, interaction)\r\n        }\r\n        else if (this.isBoardFull()) {\r\n            this.gameOver({ result: ResultType.TIE }, interaction);\r\n        }\r\n        else {\r\n            this.step();\r\n            interaction.update(this.getContent()).catch(e => super.handleError(e, 'update interaction'));\r\n        }\r\n\r\n\r\n    }\r\n    protected step(edit?: boolean): void {\r\n        this.player1Turn = this.player1Turn ? false : true;\r\n        super.step(false)\r\n    }\r\n    private turnColor(): string {\r\n        return this.player1Turn ? '\uD83D\uDD34' : '\uD83D\uDFE1'\r\n    }\r\n    private hasWon(x: number, placedY: number): boolean {\r\n        const color = this.turnColor()\r\n        // Horizontal check\r\n        const y = placedY * WIDTH;\r\n        for (let i = Math.max(0, x - 3); i <= x; i++) {\r\n            const adj = i + y\r\n            if (this.gameBoard[adj] === color && this.gameBoard[adj + 1] === color && this.gameBoard[adj + 2] === color && this.gameBoard[adj + 3] === color)\r\n                return true;\r\n        }\r\n        //Verticle Check\r\n        for (let i = Math.max(0, placedY - 3); i <= placedY; i++) {\r\n            const adj = x + (i * WIDTH);\r\n            if (i + 3 < HEIGHT) {\r\n                if (this.gameBoard[adj] === color && this.gameBoard[adj + WIDTH] === color && this.gameBoard[adj + (2 * WIDTH)] === color && this.gameBoard[adj + (3 * WIDTH)] === color)\r\n                    return true;\r\n            }\r\n        }\r\n\r\n        //Ascending Diag\r\n        for (let i = -3; i <= 0; i++) {\r\n            const adjX = x + i;\r\n            const adjY = placedY + i;\r\n            const adj = adjX + (adjY * WIDTH);\r\n            if (adjX + 3 < WIDTH && adjY + 3 < HEIGHT) {\r\n                if (this.gameBoard[adj] === color && this.gameBoard[adj + WIDTH + 1] === color && this.gameBoard[adj + (2 * WIDTH) + 2] === color && this.gameBoard[adj + (3 * WIDTH) + 3] === color)\r\n                    return true;\r\n            }\r\n        }\r\n\r\n        //Descending Diag\r\n        for (let i = -3; i <= 0; i++) {\r\n            const adjX = x + i;\r\n            const adjY = placedY - i;\r\n            const adj = adjX + (adjY * WIDTH);\r\n            if (adjX + 3 < WIDTH && adjY - 3 >= 0) {\r\n                if (this.gameBoard[adj] === color && this.gameBoard[adj - WIDTH + 1] === color && this.gameBoard[adj - (2 * WIDTH) + 2] === color && this.gameBoard[adj - (3 * WIDTH) + 3] === color)\r\n                    return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    private isBoardFull(): boolean {\r\n        for (let y = 0; y < HEIGHT; y++)\r\n            for (let x = 0; x < WIDTH; x++)\r\n                if (this.gameBoard[y * WIDTH + x] === '\u26AB')\r\n                    return false;\r\n        return true;\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
