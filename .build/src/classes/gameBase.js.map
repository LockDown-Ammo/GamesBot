{
  "version": 3,
  "sources": ["../../../src/classes/gameBase.ts"],
  "sourcesContent": ["import Discord, { DiscordAPIError, Interaction, Message, MessageActionRow, MessageButton, Snowflake, User } from 'discord.js';\r\n\r\nimport { GameContent } from \"../interfaces/gameContent\";\r\nimport GameResult, { ResultType } from \"../interfaces/gameResult\";\r\n\r\nexport default abstract class GameBase {\r\n    protected gameId!: number;\r\n    protected gameType: string;\r\n    protected isMultiplayer: boolean;\r\n    protected inGame = false;\r\n    protected result: GameResult | undefined = undefined;\r\n    protected gameMessage: Message | undefined = undefined;\r\n\r\n    public gameStarter!: User;\r\n    public player2: User | null = null;\r\n    public player1Turn = true;\r\n\r\n    protected onGameEnd: (result: GameResult) => void = () => { }\r\n    protected gameTimeoutId: NodeJS.Timeout | undefined;\r\n\r\n    protected abstract getContent(): GameContent;\r\n    protected abstract getGameOverContent(result: GameResult): GameContent;\r\n    public abstract onInteraction(interaction: Interaction): void;\r\n\r\n    constructor(gameType: string, isMultiplayer: boolean) {\r\n        this.gameType = gameType;\r\n        this.isMultiplayer = isMultiplayer;\r\n    }\r\n\r\n    protected step(edit = false): void {\r\n        if (edit)\r\n            this.gameMessage?.edit(this.getContent());\r\n\r\n        if (this.gameTimeoutId)\r\n            clearTimeout(this.gameTimeoutId);\r\n        this.gameTimeoutId = setTimeout(() => this.gameOver({ result: ResultType.TIMEOUT }), 60 * 1000);\r\n    }\r\n    public newGame(message: Message, player2: User | null, onGameEnd: (result: GameResult) => void): void {\r\n        this.gameStarter = message.author;\r\n        this.player2 = player2;\r\n        this.onGameEnd = onGameEnd;\r\n        this.inGame = true;\r\n\r\n        const content = this.getContent();\r\n        message.channel?.send({ embeds: content.embeds, components: content.components }).then(msg => {\r\n            this.gameMessage = msg;\r\n            this.gameTimeoutId = setTimeout(() => this.gameOver({ result: ResultType.TIMEOUT }), 60 * 1000)\r\n        }).catch(e => this.handleError(e, 'send message/ embed'));\r\n    }\r\n    public handleError(e: unknown, perm: string): void {\r\n        if (e instanceof DiscordAPIError) {\r\n            const de = e as DiscordAPIError;\r\n            switch (de.code) {\r\n                case 10003:\r\n                    this.gameOver({ result: ResultType.ERROR, error: 'Channel not found!' });\r\n                    break;\r\n                case 10008:\r\n                    this.gameOver({ result: ResultType.DELETED, error: 'Message was deleted!' });\r\n                    break;\r\n                case 10062:\r\n                    console.log('Unkown Interaction??');\r\n                    break;\r\n                case 50001:\r\n                    if (this.gameMessage)\r\n                        this.gameMessage.channel.send('The bot is missing access to preform some of it\\'s actions!').catch(() => {\r\n                            console.log('Error in the access error handler!');\r\n                        });\r\n                    else\r\n                        console.log('Error in the access error handler!');\r\n\r\n                    this.gameOver({ result: ResultType.ERROR, error: 'Missing access!' });\r\n                    break;\r\n                case 50013:\r\n                    if (this.gameMessage)\r\n                        this.gameMessage.channel.send(`The bot is missing the '${perm}' permissions it needs order to work!`).catch(() => {\r\n                            console.log('Error in the permission error handler!');\r\n                        });\r\n                    else\r\n                        console.log('Error in the permission error handler!');\r\n\r\n                    this.gameOver({ result: ResultType.ERROR, error: 'Missing permissions!' });\r\n                    break;\r\n                default:\r\n                    console.log('Encountered a Discord error not handled! ');\r\n                    console.log(e);\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            this.gameOver({ result: ResultType.ERROR, error: 'Game embed missing!' });\r\n        }\r\n    }\r\n    public gameOver(result: GameResult, interaction: Interaction | undefined = undefined): void {\r\n        if (!this.inGame)\r\n            return;\r\n        this.result = result;\r\n        this.inGame = false;\r\n\r\n        const gameOverContent = this.getGameOverContent(result);\r\n\r\n        this.onGameEnd(result);\r\n        this.gameMessage?.edit(gameOverContent).catch(e => this.handleError(e, ''))\r\n        if (this.gameTimeoutId) clearTimeout(this.gameTimeoutId);\r\n    };\r\n    protected getWinnerText(result: GameResult): string {\r\n        if (result.result === ResultType.TIE)\r\n            return 'Thats a tie';\r\n        else if (result.result === ResultType.TIMEOUT)\r\n            return 'They not respond quick :c';\r\n        else if (result.result === ResultType.ERROR)\r\n            return 'ERROR: ' + result.error;\r\n        else if (result.result === ResultType.WINNER)\r\n            return '<@' + result.name + '> has won GG :D';\r\n        else if (result.result === ResultType.LOSER)\r\n            return '<@' + result.name + '> has lost as they are out of moves';\r\n        return '';\r\n    }\r\n    public setGameId(id: number): void {\r\n        this.gameId = id;\r\n    }\r\n\r\n    public getGameId(): number {\r\n        return this.gameId;\r\n    }\r\n\r\n    public getGameType(): string {\r\n        return this.gameType;\r\n    }\r\n\r\n    public getMessageId(): Snowflake {\r\n        return this.gameMessage?.id ?? '';\r\n    }\r\n\r\n    public isInGame(): boolean {\r\n        return this.inGame;\r\n    }\r\n\r\n    public doesSupportMultiplayer(): boolean {\r\n        return this.isMultiplayer;\r\n    }\r\n\r\n    public createMessageActionRowButton(buttonInfo: string[][]): MessageActionRow {\r\n        return new MessageActionRow()\r\n            .addComponents(\r\n                ...buttonInfo.map(([id, emoji]) => new MessageButton()\r\n                    .setCustomId(id)\r\n                    .setEmoji(emoji)\r\n                    .setStyle(Discord.Constants.MessageButtonStyles.SECONDARY ))\r\n            );\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
